plugins {
    id 'org.springframework.boot' version '2.2.5.RELEASE'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id 'java'
    id 'eclipse'
    id 'idea'
    id 'war'
    id 'jacoco'
}

group = 'com.auito.automation-tools'
version = '1.0.0-RELEASE'
sourceCompatibility = '1.8'

war {
    baseName = "remote-slave-app"
    archiveName = jar.baseName + ".war"
}

bootWar {
    archiveFileName = jar.baseName + ".war"
}

configurations {
    developmentOnly
    runtimeClasspath {
	extendsFrom developmentOnly
    }
    compileOnly {
	extendsFrom annotationProcessor
    }
}

repositories {
    jcenter()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-quartz'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-amqp'
    implementation 'org.springframework.amqp:spring-rabbit'
	
    implementation "com.google.code.gson:gson:2.8.6"
    implementation "com.google.guava:guava:28.2-jre"
    implementation "org.rauschig:jarchivelib:1.0.0"
	
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.projectlombok:lombok'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.junit.platform:junit-platform-engine'
    
    testImplementation 'io.arivera.oss:embedded-rabbitmq:1.4.0'
}

jacoco {
    toolVersion = "0.8.5"
    reportsDir = file("$buildDir/jacoco")
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                minimum = 1
            }
        }
    }
}

jacocoTestReport {
    afterEvaluate {
        classDirectories.from = files(classDirectories.files.collect {
            fileTree(dir: it, include: ['**/service/*', '**/controller/*'])
        })
    }
}


test {
    useJUnitPlatform()
    testLogging.showStandardStreams = true
    finalizedBy jacocoTestReport
}
